{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/App.vue?a45c","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./package/lib/index.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","components","component","parseUrl","url","a","document","createElement","href","source","protocol","replace","host","hostname","port","query","search","params","ret","seg","split","len","file","pathname","match","hash","path","relative","segments","Vue","config","productionTip","location","console","log","render","h","App","$mount"],"mappings":"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","file":"js/app.0914d8d3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_vm._v(\" 1 \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    1\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  components: {\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=02c3b060&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('tokenExpireTime');\n};\n\nexport const isLogin = () => {\n  return !!localStorage.getItem('token');\n};\n\nexport const parseUrl = url => {\n  const a = document.createElement('a');\n  a.href = url;\n  return {\n    source: url,\n    protocol: a.protocol.replace(':', ''),\n    host: a.hostname,\n    port: a.port,\n    query: a.search,\n    params: (function() {\n      const ret = {};\n      const seg = a.search.replace(/^\\?/, '').split('&');\n      const len = seg.length;\n      let i = 0;\n      let s;\n      for (; i < len; i++) {\n        if (!seg[i]) {\n          continue;\n        }\n        s = seg[i].split('=');\n        ret[s[0]] = s[1];\n      }\n      return ret;\n    })(),\n    file: (a.pathname.match(/\\/([^/?#]+)$/i) || ['', ''])[1],\n    hash: a.hash.replace('#', ''),\n    path: a.pathname.replace(/^([^/])/, '/$1'),\n    relative: (a.href.match(/tps?:\\/\\/[^/]+(.+)/) || ['', ''])[1],\n    segments: a.pathname.replace(/^\\//, '').split('/'),\n  };\n};\n\n/**\n * @description 750原型的px转换为vw\n * @author hys\n * @date 2020-02-04\n * @param {number} px\n * @returns {string}\n */\nexport const pxToVw = px => {\n  const ratio = 750 / 100;\n  const vw = `${(px / ratio).toFixed(6)}vw`;\n  return vw;\n};\n\n/**\n * @description 750原型的px转换为显示屏幕的px\n * @param {number} px\n * @returns {number}\n */\nexport const pxToPxRatio = px => {\n  const clientWidth = document.body.clientWidth;\n  const pxRatio = px * (clientWidth / 750);\n  return pxRatio;\n};\n\n/**\n * @description 显示原型的px转换为vw\n * @author hys\n * @date 2020-02-13\n * @param {number} px\n * @returns {string}\n */\nexport const pxToVwRatio = px => {\n  const clientWidth = document.documentElement.clientWidth || document.body.clientWidth;\n  const ratio = clientWidth / 100;\n  const vw = `${(px / ratio).toFixed(6)}vw`;\n  return vw;\n};\n\n// 保留两位小数以及千分位的分隔符\nexport const formatPrice = (num, scale = 4, replenish = false) => {\n  let str = toFixed(num, scale, replenish).toString();\n  let res = str || '0';\n  // 取小数部分\n  let dot = '';\n  const find = str.indexOf('.');\n  if (find !== -1) {\n    res = str.substring(0, find);\n    dot = str.substring(str.length, find);\n  }\n  // 取到整数部分\n  const intSum = res.replace(/\\B(?=(?:\\d{3})+$)/g, ',');\n  const ret = intSum + dot;\n  return ret;\n};\n\n/**\n * 格式化数字、金额、千分位、保留几位小数、舍入舍去\n *\n * @since 1.0.7\n * @param number 要格式化的数字\n * @param decimals 保留几位小数\n * @param decPoint 小数点符号\n * @param thousandsSep 千分位符号\n * @param roundTag 舍入参数，默认 'ceil' 向上取,'floor'向下取,'round' 四舍五入\n * @returns {XML|void|*|string}\n * @example\n *\n * formatNumber(2, 2, '.', ',');\n * // => 2.00\n */\n\n// eslint-disable-next-line max-params\nexport function formatPrice2(number, decimals, decPoint, thousandsSep, roundTag) {\n  let numberS = `${number}`.replace(/[^0-9+-Ee.]/g, '');\n  roundTag = roundTag || 'ceil'; // 'ceil','floor','round'\n  const n = !isFinite(Number(numberS)) ? 0 : Number(numberS);\n  const prec = !isFinite(Number(decimals)) ? 0 : Math.abs(decimals);\n  const sep = typeof thousandsSep === 'undefined' ? ',' : thousandsSep;\n  const dec = typeof decPoint === 'undefined' ? '.' : decPoint;\n  const re = /(-?\\d+)(\\d{3})/;\n  let s = '';\n  const toFixedFix = function(n, prec) {\n    const k = Math.pow(10, prec);\n    return `${parseFloat(Math[roundTag](parseFloat((n * k).toFixed(prec * 2))).toFixed(prec * 2)) / k}`;\n  };\n  s = (prec ? toFixedFix(n, prec) : `${Math.round(n)}`).split('.');\n  while (re.test(s[0])) {\n    s[0] = s[0].replace(re, `$1${sep}$2`);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n\n// 处理数字小数位\n// eslint-disable-next-line max-params\nexport const toFixed = (number, scale = 4, replenish = false, roundOff = true) => {\n  let res = '';\n  if (number) {\n    let str = `${number}`;\n    if (str.indexOf('e') > -1 || str.indexOf('E') > -1) {\n      // 科学计数法\n      let str = number.toFixed(scale + 1);\n      res = str.substring(0, str.length - 1);\n    } else if (str.indexOf('.') > -1) {\n      // 小数\n      if (scale === 0) {\n        res = str.substring(0, str.indexOf('.'));\n      } else {\n        if (roundOff) {\n          let resArr = res.toString().split('.');\n          if (resArr[1]) {\n            // 截取指定位数\n            res = str.substring(0, str.indexOf('.') + scale + 1 + 1);\n            // 增加四舍五入功能\n            res = accDiv(Math.round(accMul(Number(res), Math.pow(10, scale))), Math.pow(10, scale)).toString();\n          } else {\n            // 截取指定位数\n            res = str.substring(0, str.indexOf('.') + scale + 1);\n          }\n        } else {\n          // 截取指定位数\n          res = str.substring(0, str.indexOf('.') + scale + 1);\n        }\n      }\n    } else {\n      // 整数\n      res = str;\n    }\n  }\n  // 是否填充0\n  if (replenish) {\n    res = res || '0';\n    let resArr = res.toString().split('.');\n    if (resArr[1]) {\n      let diff = scale - resArr[1].length;\n      if (diff > 0) {\n        let a = [];\n        a.length = diff;\n        a.fill(0);\n        let pushStr = a.join('');\n        res = res + pushStr;\n      }\n    } else {\n      if (Number(scale)) {\n        let a = [];\n        a.length = scale;\n        a.fill(0);\n        let pushStr = a.join('');\n        res = `${res}.${pushStr}`;\n      }\n    }\n  }\n\n  return res;\n};\n\n// 手机设备判断\nexport const judgePhone = () => {\n  const u = navigator.userAgent;\n  const isAndroid = u.indexOf('Android') > -1;\n  const isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n  if (isAndroid) {\n    return 'A';\n  }\n  if (isIOS) {\n    return 'S';\n  }\n  return false;\n};\n\n/**\n * 乘法函数，用来得到精确的乘法结果<br>\n * javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\n *\n * @param {number} arg1\n * @param {number} arg2\n * @returns {number} arg1乘以arg2的精确结果\n * @example\n *\n * accMul(0.222, 0.3333)\n * // => 0.0739926\n */\nexport const accMul = (arg1 = 0, arg2 = 0) => {\n  let m = 0;\n  const s1 = arg1.toString();\n  const s2 = arg2.toString();\n\n  try {\n    m += s1.split('.')[1].length;\n  } catch (e) {}\n  try {\n    m += s2.split('.')[1].length;\n  } catch (e) {}\n  return (Number(s1.replace('.', '')) * Number(s2.replace('.', ''))) / Math.pow(10, m);\n};\n\n/**\n * 加法函数，用来得到精确的加法结果<br>\n * javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\n *\n * @param {number} arg1\n * @param {number} arg2\n * @returns {number} arg1加上arg2的精确结果\n * @example\n *\n * accAdd(0.1, 0.2)\n * // => 0.3\n */\nexport function accAdd(arg1, arg2) {\n  let r1;\n  let r2;\n  let m;\n  let c;\n\n  try {\n    r1 = arg1.toString().split('.')[1].length;\n  } catch (e) {\n    r1 = 0;\n  }\n  try {\n    r2 = arg2.toString().split('.')[1].length;\n  } catch (e) {\n    r2 = 0;\n  }\n  c = Math.abs(r1 - r2);\n  m = Math.pow(10, Math.max(r1, r2));\n  if (c > 0) {\n    const cm = Math.pow(10, c);\n    if (r1 > r2) {\n      arg1 = Number(arg1.toString().replace('.', ''));\n      arg2 = Number(arg2.toString().replace('.', '')) * cm;\n    } else {\n      arg1 = Number(arg1.toString().replace('.', '')) * cm;\n      arg2 = Number(arg2.toString().replace('.', ''));\n    }\n  } else {\n    arg1 = Number(arg1.toString().replace('.', ''));\n    arg2 = Number(arg2.toString().replace('.', ''));\n  }\n  return (arg1 + arg2) / m;\n}\n\n/**\n * 除法函数，用来得到精确的除法结果<br>\n * javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。\n *\n * @param {number} arg1\n * @param {number} arg2\n * @returns {number} arg1除以arg2的精确结果\n * @example\n *\n * accDiv(0.2, 0.3)\n * // => 0.6666666666666666\n */\nexport function accDiv(arg1, arg2) {\n  let t1 = 0;\n  let t2 = 0;\n  let r1;\n  let r2;\n\n  try {\n    t1 = arg1.toString().split('.')[1].length;\n  } catch (e) {}\n  try {\n    t2 = arg2.toString().split('.')[1].length;\n  } catch (e) {}\n  r1 = Number(arg1.toString().replace('.', ''));\n  r2 = Number(arg2.toString().replace('.', ''));\n  return (r1 / r2) * Math.pow(10, t2 - t1);\n}\n\n/**\n * 减法函数，用来得到精确的减法结果<br>\n * javascript的减法结果会有误差，在两个浮点数相减的时候会比较明显。这个函数返回较为精确的减法结果。\n *\n * @param {number} arg1\n * @param {number} arg2\n * @returns {number} arg1减去arg2的精确结果\n * @example\n *\n * accDiv(0.3, 0.2)\n * // => 0.1\n */\nexport function accSub(arg1, arg2) {\n  let r1;\n  let r2;\n  let m;\n  let n;\n\n  try {\n    r1 = arg1.toString().split('.')[1].length;\n  } catch (e) {\n    r1 = 0;\n  }\n  try {\n    r2 = arg2.toString().split('.')[1].length;\n  } catch (e) {\n    r2 = 0;\n  }\n  m = Math.pow(10, Math.max(r1, r2)); // last modify by deeka //动态控制精度长度\n  n = r1 >= r2 ? r1 : r2;\n  return Number(((arg1 * m - arg2 * m) / m).toFixed(n));\n}\n\n// 科学记数法转换\nexport const toNumber = num => {\n  // 处理非数字\n  if (isNaN(num)) return num;\n\n  // 处理不需要转换的数字\n  if (!/e/i.test(num.toString())) return num;\n\n  return num.toFixed(18).replace(/\\.?0+$/, '');\n};\n\n// 判断微信\nexport const isWeiXin = () => {\n  const ua = window.navigator.userAgent.toLowerCase();\n  let a = ua.match(/MicroMessenger/i);\n  if (a && a[0] === 'micromessenger') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// 判断QQ\nexport const isQQ = () => {\n  const ua = window.navigator.userAgent.toLowerCase();\n  if (ua.indexOf(' qq') > -1 && ua.indexOf('mqqbrowser') < 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * @description 是否是手机格式\n * @param {string} val\n * @returns {boolean}\n */\nexport const isPhoneMode = val => {\n  const reg = /^1[3-578]\\d{9}$/;\n  if (reg.test(val)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * @description 是否是邮箱格式\n * @param {string} val\n * @returns {boolean}\n */\nexport const isEmailMode = val => {\n  const reg = /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/;\n  if (reg.test(val)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * @description 关闭屏幕滚动\n * 简易版\n * 注意事项: 浮层定位需要使用fixed\n */\nexport const closeScroll = () => {\n  const body = document.querySelector('body');\n  body.style.overflow = 'hidden';\n};\n\n/**\n * @description 开启屏幕滚动\n * 简易版\n * 注意事项: 浮层定位需要使用fixed\n */\nexport const openScroll = () => {\n  const body = document.querySelector('body');\n  body.style.overflow = 'inherit';\n};\n\n/**\n * @description 复制内容方法\n * @author wht\n * @date 2020-05-14\n * @param {*} con 需要复制到粘贴板的内容\n */\nexport function copyContent(con) {\n  const input = document.createElement('input'); // 创建一个新input标签\n  input.setAttribute('readonly', 'readonly'); // 设置input标签只读属性\n  input.setAttribute('value', con); // 设置input value值为需要复制的内容\n  document.body.appendChild(input); // 添加input标签到页面\n  input.select(); // 选中input内容\n  input.setSelectionRange(0, 9999); // 设置选中input内容范围\n  const iscopy = document.execCommand('copy'); // 复制\n  document.body.removeChild(input); // 删除新创建的input标签\n  if (iscopy) {\n    // 复制成功\n  }\n}\n\n/**\n * 为数字加上单位：万或亿\n *\n * @param {number} number 输入数字.\n * @param {number} decimalDigit 小数点后最多位数，默认为2\n * @return {*} 加上单位后的数字\n * @example\n *\n * priceUnitProcess(1000.01)\n * // => 1000.01\n *\n * priceUnitProcess(10000)\n * // => 1万\n *\n * priceUnitProcess(99000)\n * // => 9.9万\n *\n * priceUnitProcess(566000)\n * // => 56.6万\n *\n * priceUnitProcess(5660000)\n * // => 566万\n *\n * priceUnitProcess(44440000)\n * // => 4444万\n *\n * priceUnitProcess(11111000)\n * // => 1111.1万\n *\n * priceUnitProcess(444400000)\n * // => 4.44亿\n *\n * priceUnitProcess(400000000000000000000000)\n * // => 4000万亿亿\n *\n * priceUnitProcess(4000000000000000000000000)\n * // => 4亿亿亿\n */\nexport function priceUnitProcess(number, decimalDigit = 2) {\n  let isNeedAbs = false;\n  if (number < 0) {\n    isNeedAbs = true;\n    number = Math.abs(number);\n  }\n\n  let getDigit = integer => {\n    let digit = -1;\n    while (integer >= 1) {\n      digit++;\n      integer = integer / 10;\n    }\n    return digit;\n  };\n\n  const integer = Math.floor(number);\n  const digit = getDigit(integer);\n  // ['个', '十', '百', '千', '万', '十万', '百万', '千万'];\n  const unit = [];\n\n  // eslint-disable-next-line max-params\n  let addWan = (integer, number, mutiple, decimalDigit) => {\n    const digit = getDigit(integer);\n    if (digit > 3) {\n      let remainder = digit % 8;\n      // ‘十万’、‘百万’、‘千万’显示为‘万’\n      if (remainder >= 5) {\n        remainder = 4;\n      }\n      return `${Math.floor(number / Math.pow(10, remainder + mutiple - decimalDigit)) / Math.pow(10, decimalDigit)}万`;\n    } else {\n      return (Math.floor(number / Math.pow(10, mutiple - decimalDigit)) / Math.pow(10, decimalDigit)).toString();\n    }\n  };\n\n  if (digit > 3) {\n    const multiple = Math.floor(digit / 8);\n    if (multiple >= 1) {\n      const tmp = Math.floor(integer / Math.pow(10, 8 * multiple));\n      unit.push(addWan(tmp, number, 8 * multiple, decimalDigit));\n      for (let i = 0; i < multiple; i++) {\n        unit.push('亿');\n      }\n      if (isNeedAbs) {\n        return `-${unit.join('')}`;\n      } else {\n        return unit.join('');\n      }\n    } else {\n      if (isNeedAbs) {\n        return `-${addWan(integer, number, 0, decimalDigit)}`;\n      } else {\n        return addWan(integer, number, 0, decimalDigit);\n      }\n    }\n  } else {\n    if (isNeedAbs) {\n      return `-${number}`;\n    } else {\n      return number.toString();\n    }\n  }\n}\n\n/**\n * 手机号码中间部分替换成指定符号\n *\n * @param {string} phone\n * @param {string} symbol 默认为`*`\n * @returns {string|*|XML|void}\n * @example\n *\n * formatPhone('15858264903');\n * // => 158****4903\n */\nexport const formatPhone = (phone, symbol = '****') => {\n  return phone.toString().replace(/(\\d{3})\\d{4}(\\d+)/, `$1${symbol}$2`);\n};\n\n/**\n * 格式化银行卡<br>\n * 用户在输入银行卡号时，需要以4位4位的形式显示，就是每隔4位加个空格，方便用户校对输入的银行卡是否正确<br>\n * **注：**一般数据库里面存的都是不带格式的原始数据，所以提交的时候记得过滤下空格再提交哦。毕竟格式化这种算是表现层，前端展示的时候处理下就好，业务逻辑什么用到的卡号可不是格式化后的呢。<br>\n * 还原`val.replace(/\\s/g, '');`\n *\n * @param {string} val\n * @returns {*}\n * @example\n *\n * formatBankCard('6225365271562822');\n * // => 6225 3652 7156 2822\n */\nexport function formatBankCard(val) {\n  if (typeof val !== 'string') {\n    throw new Error('val');\n  }\n\n  const len = val.length;\n  const reg = /(\\d{4})(?=\\d)/g;\n\n  if (len < 4) {\n    return val;\n  } else {\n    return val.replace(reg, '$1 ');\n  }\n}\n\n/**\n * html字符解码\n *\n * @param {string} str\n * @returns {string}\n * @example\n *\n * formatHtmlDecode('&lt;script&gt;');\n * // => <script>\n */\nexport function formatHtmlDecode(str) {\n  if (typeof str === 'string' && str.length === 0) {\n    return '';\n  }\n\n  const s = str.replace(/&amp;/g, '&');\n\n  return (\n    s\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      // eslint-disable-next-line quotes\n      .replace(/&#39;/g, \"'\")\n      .replace(/&nbsp;/g, ' ')\n      .replace(/&quot;/g, '\"')\n      .replace(/<br>/g, '\\\\n')\n  );\n}\n\n/**\n * html字符编码\n *\n * @param {string} str\n * @returns {string}\n * @example\n *\n * formatHtmlEncode('<script>');\n * // => &lt;script&gt;\n */\nexport function formatHtmlEncode(str) {\n  if (typeof str === 'string' && str.length === 0) {\n    return '';\n  }\n\n  const s = str.replace(/&/g, '&amp;');\n\n  return s\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&#39;')\n    .replace(/ /g, '&nbsp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/\\n/g, '<br>');\n}\n\n/**\n * 是否是支付宝内核\n *\n * @returns {boolean}\n * @example\n *\n * isAlipay();\n * // => false\n */\nexport function isAlipay() {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n\n  const ua = navigator.userAgent.toLowerCase();\n  return ua.indexOf('alipayclient') !== -1;\n}\n\n/**\n * 是否为有效的车牌号码\n *\n * 1.常规车牌号：仅允许以汉字开头，后面可录入六个字符，由大写英文字母和阿拉伯数字组成。如：粤B12345；<br>\n * 2.武警车牌：允许前两位为大写英文字母，后面可录入七个字符，由大写英文字母和阿拉伯数字组成，其中第三位可录汉字也可录大写英文字母及阿拉伯数字，如：WJ01警0081、WJ0112345。<br>\n * 3.最后一个为汉字的车牌：允许以汉字开头，后面可录入六个字符，前五位字符，由大写英文字母和阿拉伯数字组成，而最后一个字符为汉字，汉字包括“挂”、“学”、“警”、“军”、“港”、“澳”。<br>如：粤Z1234港。\n * 4.新军车牌：以两位为大写英文字母开头，后面以5位阿拉伯数字组成。如：BA12345。<br>\n * 5.黑龙江车牌存在08或38开头的情况。<br>\n *\n * @param {string} val\n * @returns {boolean}\n * @example\n *\n * isLicenseNo('浙A12345');\n * // => true\n */\nexport function isLicenseNo(val) {\n  const reg = /(^[\\u4E00-\\u9FA5]{1}[A-Z0-9]{6}$)|(^[A-Z]{2}[A-Z0-9]{2}[A-Z0-9\\u4E00-\\u9FA5]{1}[A-Z0-9]{4}$)|(^[\\u4E00-\\u9FA5]{1}[A-Z0-9]{5}[挂学警军港澳]{1}$)|(^[A-Z]{2}[0-9]{5}$)|(^(08|38){1}[A-Z0-9]{4}[A-Z0-9挂学警军港澳]{1}$)/;\n\n  return reg.test(val);\n}\n\n/**\n * 是否为有效的手机号\n *\n * @param {string} val\n * @returns {boolean}\n * @example\n *\n * isMobile('15898745678');\n * // => true\n */\nexport function isMobile(val) {\n  const reg = /^[1][34578]\\d{9}$/;\n\n  return reg.test(val.toString());\n}\n\n/**\n * 是否为有效的身份证号\n *\n * @param {string} val\n * @returns {boolean}\n * @example\n *\n * isCardId('411423198807127834');\n * // => true\n */\nexport function isCardId(val) {\n  const reg = /^\\d{6}(19|2\\d)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X|x)?$/;\n  // var reg = /^ [1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]?$/;\n\n  return reg.test(val);\n}\n\n/**\n * 是否为有效的邮箱<br>\n * 名称允许汉字、字母、数字，域名只允许英文域名<br>\n * 中文如：杨元庆001Abc@lenovo.com.cn\n *\n * @param {string} val\n * @returns {boolean}\n * @example\n *\n * isValidEmail('123456@qq.com');\n * // => true\n */\nexport function isValidEmail(val) {\n  const reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/i;\n\n  return reg.test(val);\n}\n\n// 是否为有效的密码(6-16位字母加数字组合，不能包含空格)\nexport const isValidPassword = val => {\n  const reg = /^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]{6,16}$/;\n  return reg.test(val);\n};\n\n/**\n * 是否为有效的url<br>\n *\n * 支持类型:<br>\n * http(s)://(username:password@)(www.)domain.(com/co.uk)(/...)<br>\n * (s)ftp://(username:password@)domain.com/...<br>\n * git://(username:password@)domain.com/...<br>\n * irc(6/s)://host:port/... //<br>\n * afp over TCP/IP: afp://[<user>@]<host>[:<port>][/[<path>]]<br>\n * telnet://<user>:<password>@<host>[:<port>/]<br>\n * smb://[<user>@]<host>[:<port>][/[<path>]][?<param1>=<value1>[;<param2>=<value2>]]<br>\n *\n * @param {string} val\n * @returns {*}\n * @example\n *\n * isValidURI('https://github.com/lodash');\n * // => true\n */\nexport function isValidURI(url) {\n  const protocols = '((https?|s?ftp|irc[6s]?|git|afp|telnet|smb):\\\\/\\\\/)?';\n  const userInfo = '([a-z0-9]\\\\w*(\\\\:[\\\\S]+)?\\\\@)?';\n  const domain = '([a-z0-9]([\\\\w]*[a-z0-9])*\\\\.)?[a-z0-9]\\\\w*\\\\.[a-z]{2,}(\\\\.[a-z]{2,})?';\n  const port = '(:\\\\d{1,5})?';\n  const ip = '\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}';\n  const address = '(\\\\/\\\\S*)?';\n  const domainType = [protocols, userInfo, domain, port, address];\n  const ipType = [protocols, userInfo, ip, port, address];\n\n  const verify = function(type) {\n    return new RegExp(`^${type.join('')}$`, 'i').test(url);\n  };\n\n  return verify(domainType) || verify(ipType);\n}\n\n/**\n * 将字节转换成友好格式，如Bytes，KB，MB\n *\n * @param {string} bytes\n * @returns {*}\n * @example\n *\n * formatFileSize(10000)\n * // => 9.8 KB\n */\nexport function formatFileSize(bytes) {\n  const sizes = ['Bytes', 'KB', 'MB'];\n  if (bytes === 0) {\n    return 'n/a';\n  }\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)).toString(), 10);\n  return `${(bytes / Math.pow(1024, i)).toFixed(1)} ${sizes[i]}`;\n}\n\n/**\n * 获取设备像素比\n *\n * @returns {number}\n * @example\n *\n * // window.navigator.appVersion(5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1)\n * getPixelRatio();\n * // => 2\n */\nexport function getPixelRatio() {\n  const ctx = document.createElement('canvas').getContext('2d');\n  const dpr = window.devicePixelRatio || 1;\n  const bsr =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n\n  return dpr / bsr;\n}\n\n/**\n * 获取浏览器的类型和版本号\n *\n * @returns {{type: string, version: string}}\n * @example\n *\n * getBrowser();\n * // => {type: \"chrome\", version: \"60.0.3112.101\"}\n */\nexport function getBrowser() {\n  const ua = navigator.userAgent.toLowerCase();\n  let type = 'UNKNOW';\n  let v;\n  const check = function(regex) {\n    return regex.test(ua);\n  };\n\n  // IE\n  if (check(/msie/) && !check(/opera/)) {\n    type = 'ie';\n    v = /msie[/|\\s]*([\\d+?.?]+)/.exec(ua);\n  } else if (!check(/webkit/) && check(/gecko/) && check(/firefox/) && !check(/opera/)) {\n    // firefox\n    type = 'firefox';\n    v = /firefox[/|\\s]*([\\d+?.?]+)/.exec(ua);\n  } else if (check(/\\bchrome\\b/)) {\n    // chrome\n    type = 'chrome';\n    v = /chrome[/|\\s]*([\\d+?.?]+)/.exec(ua);\n  } else if (check(/applewebkit/) && check(/safari/)) {\n    // safari (!check(/\\bchrome\\b/) is ensure by non-chrome above)\n    type = 'safari';\n    v = /version[/|\\s]*([\\d+?.?]+)/.exec(ua);\n  } else if (check(/opera/)) {\n    type = 'opera';\n    v = /version[/|\\s]*([\\d+?.?]+)/.exec(ua) || /opera[/|\\s]*([\\d+?.?]+)/.exec(ua);\n  }\n\n  return {\n    type: type,\n    version: v && v[1] ? v[1] : 'UNKNOW',\n  };\n}\n\n/**\n * dom操作，元素是包含某个class\n *\n * @since 1.1.5\n * @param el HTML元素\n * @param cls css类名\n * @returns {boolean}\n * @example\n *\n * <div class=\"box flex\"></div>\n * hasClass(document.querySelector('.box'), 'flex');\n * // => true\n */\nexport function hasClass(el, cls) {\n  if (!el || !cls) {\n    return false;\n  }\n  if (cls.indexOf(' ') !== -1) {\n    throw new Error('className should not contain space.');\n  }\n  if (el.classList) {\n    return el.classList.contains(cls);\n  } else {\n    return ` ${el.className} `.indexOf(` ${cls} `) > -1;\n  }\n}\n\n/**\n * dom操作，元素添加某个class\n *\n * @since 1.1.5\n * @param el HTML元素\n * @param cls css类名\n * @example\n *\n * <div class=\"box flex\"></div>\n * addClass(document.querySelector('.box'), 'flex1');\n * // => <div class=\"box flex flex1\"></div>\n */\nexport function addClass(el, cls) {\n  if (!el) {\n    return;\n  }\n  let curClass = el.className;\n  const classes = (cls || '').split(' ');\n\n  for (let i = 0, j = classes.length; i < j; i++) {\n    const clsName = classes[i];\n    if (!clsName) {\n      continue;\n    }\n\n    if (el.classList) {\n      el.classList.add(clsName);\n    } else {\n      if (!hasClass(el, clsName)) {\n        curClass += ` ${clsName}`;\n      }\n    }\n  }\n  if (!el.classList) {\n    el.className = curClass;\n  }\n}\n\nconst trim = function(string) {\n  return (string || '').replace(/^[\\s\\uFEFF]+|[\\s\\uFEFF]+$/g, '');\n};\n\n/**\n * dom操作，元素删除某个class\n *\n * @since 1.1.5\n * @param el HTML元素\n * @param cls css类名\n * @example\n *\n * <div class=\"box flex\"></div>\n * removeClass(document.querySelector('.box'), 'flex');\n * // => <div class=\"box\"></div>\n */\nexport function removeClass(el, cls) {\n  if (!el || !cls) {\n    return;\n  }\n  const classes = cls.split(' ');\n  let curClass = ` ${el.className} `;\n\n  for (let i = 0, j = classes.length; i < j; i++) {\n    const clsName = classes[i];\n    if (!clsName) {\n      continue;\n    }\n\n    if (el.classList) {\n      el.classList.remove(clsName);\n    } else {\n      if (hasClass(el, clsName)) {\n        curClass = curClass.replace(` ${clsName} `, ' ');\n      }\n    }\n  }\n  if (!el.classList) {\n    el.className = trim(curClass);\n  }\n}\n\n/**\n * 主动防御\n * 对于我们操作的数据，尤其是由 API 接口返回的，时常会有一个很复杂的深层嵌套的数据结构。为了代码的健壮性，很多时候需要对每一层访问都作空值判断，就像这样：\n props.user &&\n props.user.posts &&\n props.user.posts[0] &&\n props.user.posts[0].comments &&\n props.user.posts[0].comments[0]\n 代码看起来相当不美观，因此提供了一个非常简洁明了的原生的方式。\n *\n * @param p 属性列表\n * @param o 对象\n * @returns {*} 如果正常访问到，则返回对应的值，否则返回 null。\n * @example\n *\n * var props = {\n *  user: {\n *    post: [{\n *      comments: 'test'\n *    }]\n *  }\n * };\n * getIn(['user', 'post', 0, 'comments'], props);\n * // => test\n */\nexport function getObj(p, o) {\n  return p.reduce((xs, x) => {\n    return xs && xs[x] ? xs[x] : null;\n  }, o);\n}\n\n/**\n * 滚动到顶部\n * 使用document.documentElement.scrollTop或document.body.scrollTop获取到顶部的距离。从顶部滚动一小部分距离。\n 使用window.requestAnimationFrame（）来滚动。\n *\n * @since 1.2.1\n * @example\n *\n * scrollToTop();\n */\nexport function scrollToTop() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n}\n\n/**\n * @description 深度合并对象\n */\nexport const assignDeep = (...args) => {\n  let isPlainObject = obj => {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n  };\n  if (args.length < 2) return args[0];\n  let result = args[0];\n  args.shift();\n  args.forEach(item => {\n    if (isPlainObject(item)) {\n      if (!isPlainObject(result)) result = {};\n      for (let key of Object.keys(item)) {\n        if (result[key] && isPlainObject(item[key])) {\n          result[key] = assignDeep(result[key], item[key]);\n        } else {\n          result[key] = item[key];\n        }\n      }\n    } else if (item instanceof Array) {\n      if (!(result instanceof Array)) result = [];\n      item.forEach((arrItem, arrIndex) => {\n        if (isPlainObject(arrItem)) {\n          result[arrIndex] = assignDeep(result[arrIndex]);\n        } else {\n          result[arrIndex] = arrItem;\n        }\n      });\n    }\n  });\n  return result;\n};\n\n// 浏览器标签页是否激活\nexport const browserTabActive = callback => {\n  let hiddenProperty =\n    'hidden' in document\n      ? 'hidden'\n      : 'webkitHidden' in document\n        ? 'webkitHidden'\n        : 'mozHidden' in document\n          ? 'mozHidden'\n          : '';\n  let visibilityChangeEvent = hiddenProperty.replace(/hidden/i, 'visibilitychange');\n  let onVisibilityChange = function() {\n    if (document[hiddenProperty]) {\n      // 未激活状态\n      callback(false);\n    } else {\n      // 激活状态\n      callback(true);\n    }\n  };\n  onVisibilityChange();\n  // IE10+\n  document.addEventListener(visibilityChangeEvent, onVisibilityChange);\n};\n\n// 获取数组深度\nexport const getArrayDepth = arr => {\n  let depth = 1;\n  let loopDepth = arr => {\n    arr.forEach(item => {\n      Object.values(item).forEach(c => {\n        if (Array.isArray(c)) {\n          depth += 1;\n          loopDepth(c);\n        }\n      });\n    });\n  };\n  loopDepth(arr);\n  return depth;\n};\n\n/**\n * @description 设置页面css变量\n * @param {string} name\n * @param {string} value\n */\nexport const setStyleProperty = (name, value) => {\n  let html = document.querySelector('html');\n  html.style.setProperty(`--${name}`, value);\n};\n\n/**\n* @description 判断是否是IE\n\n* @return {*} {boolean}\n\n*/\nexport const isIE = () => {\n  if (!!window.ActiveXObject || 'ActiveXObject' in window) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// import CryptoJS from 'crypto-js';\n// /**\n//  * @description 加密\n//  * @param {string} data\n//  * @param {string} [key=默认加密密钥]\n//  * @returns {string} base64格式的密文\n//  */\n// export const encrypt = (data: string, key = '123456789asdfghq'): string => {\n//   let keys = CryptoJS.enc.Utf8.parse(key);\n//   let encrypted = CryptoJS.AES.encrypt(data, keys, {\n//     mode: CryptoJS.mode.ECB,\n//     padding: CryptoJS.pad.Pkcs7,\n//   });\n//   return encrypted.toString();\n// };\n\n/**\n * @description 异步-截流\n * @param {Function} fuc\n * @param {number} waitTime\n * @returns {Function}\n */\nexport const throttle = (fuc, waitTime) => {\n  if (typeof fuc !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  let waiting = false;\n  let timer = {};\n  return (params = {}) => {\n    // 拦截指定时间内的后续请求\n    if (waiting) {\n      return {\n        data: null,\n        status: 303,\n      };\n    }\n    waiting = true;\n    timer = setTimeout(() => {\n      waiting = false;\n      clearTimeout(timer);\n    }, waitTime);\n    return fuc(params);\n  };\n};\n\n/**\n * @description 异步-防抖\n * @param {Function} fuc\n * @param {number} waitTime\n * @returns {Function}\n */\nexport const debounce = (fuc, waitTime) => {\n  if (typeof fuc !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  let timer = null;\n  let rj = null;\n  return async (params = {}) => {\n    let arr = new Promise((resolve, reject) => {\n      if (timer) {\n        // 释放上次的队列\n        clearTimeout(timer);\n        timer = null;\n        // 释放上次的promise\n        rj({\n          data: null,\n          status: 303,\n        });\n      }\n      timer = setTimeout(async () => {\n        timer = null;\n        rj = null;\n        let res = await fuc(params);\n        resolve(res);\n      }, waitTime);\n      rj = resolve;\n    });\n    let a = await arr;\n    return a;\n  };\n};\n\n// import day from '@/theme/day';\n// import night from '@/theme/night';\n// /**\n//  * @description 切换主题\n//  * @author hys\n//  * @date 2020-01-15\n//  * @param {string} theme\n//  */\n// export const switchTheme = (theme: string): void => {\n//   // 获取主题变量存储位置\n//   let wt: any = document.querySelector('#ThemeVariate');\n//   let sv: CSSStyleSheet = wt.styleSheet || wt.sheet;\n//   // 获取最新变量集合\n//   let val = theme === 'day' ? day : night;\n//   // 删除页面中已存在的规则\n//   let svl: number = sv.cssRules.length;\n//   if (svl !== 0) {\n//     sv.deleteRule(0);\n//   }\n//   // 循环变量集合组成新规则\n//   let insertBody: String = '';\n//   for (let [key, idx] of Object.entries(val)) {\n//     insertBody += `--${key}: ${idx};`;\n//   }\n//   // 将新规则插入到变量存储位置\n//   sv.insertRule(`html{${insertBody}}`);\n// };\n\n// 判断设备并设置body\nexport const judgeDeviceBody = () => {\n  let body = document.querySelector('body');\n  let setClass = res => {\n    body.className = res;\n  };\n  if (judgePhone()) {\n    // 手机访问\n    setClass('mobile');\n  } else {\n    setClass('pc');\n  }\n};\n\n/**\n * @description 页面滚动高度\n * @returns {number}\n */\nexport const getScrollTop = () => {\n  let scrollTop = 0;\n  let bodyScrollTop = 0;\n  let documentScrollTop = 0;\n  if (document.body) {\n    bodyScrollTop = document.body.scrollTop;\n  }\n  if (document.documentElement) {\n    documentScrollTop = document.documentElement.scrollTop;\n  }\n  scrollTop = bodyScrollTop - documentScrollTop > 0 ? bodyScrollTop : documentScrollTop;\n  return scrollTop;\n};\n\n/**\n * @description 页面可视窗口高度\n * @returns {number}\n */\nexport const getClientHeight = () => {\n  let windowHeight = 0;\n  if (document.compatMode === 'CSS1Compat') {\n    windowHeight = document.documentElement.clientHeight;\n  } else {\n    windowHeight = document.body.clientHeight;\n  }\n  return windowHeight;\n};\n\n/**\n * @description 页面内容高度\n * @returns {number}\n */\nexport const getDocumentHeight = () => {\n  let scrollHeight = 0;\n  let bodyScrollHeight = 0;\n  let documentScrollHeight = 0;\n  if (document.body) {\n    bodyScrollHeight = document.body.scrollHeight;\n  }\n  if (document.documentElement) {\n    documentScrollHeight = document.documentElement.scrollHeight;\n  }\n  scrollHeight = bodyScrollHeight - documentScrollHeight > 0 ? bodyScrollHeight : documentScrollHeight;\n  return scrollHeight;\n};\n\n/**\n * @description 生成随机字符串(最多11位)\n * @param {number} num 需要返回字符数\n * @returns {string} 生成的字符\n */\nexport const randomString = num => {\n  let str = Math.random().toString(36)\n    .substr(2);\n  return str.substr(0, num);\n};\n\n/**\n * 获取max与min之间的随机数\n *\n * @param {number} min\n * @param {number} max\n * @returns {*}\n * @example\n *\n * getRandomInt(1, 9);\n * // => 2\n */\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n// import countries from './countries';\n// /**\n//  * @description 国家码转国家名称\n//  * @param {string} code 国家码\n//  * @returns {(string | void)} 国家名称\n//  */\n// export const countryCodeToName = code => {\n//   if (!code) return '';\n//   let arr = countries.concat();\n//   let search = arr.filter((item, index) => {\n//     return item.nationCode === code;\n//   });\n//   let first = search[0];\n//   let name;\n//   if (getLocale() === 'zh_CN') {\n//     name = first.chinese;\n//   } else {\n//     name = first.english;\n//   }\n//   return name;\n// };\n\n// /**\n//  * @description 国家码转国家对象信息\n//  * @param {string} code 国家码\n//  * @returns {(string | void)} 国家对象信息\n//  */\n// export const countryCodeToObj = code => {\n//   if (!code)\n//     return {\n//       abbreviation: '',\n//       chinese: '',\n//       id: '',\n//       nationCode: '86',\n//       english: '',\n//     };\n//   let arr = countries.concat();\n//   let search = arr.filter((item, index) => {\n//     return item.nationCode === code;\n//   });\n//   return search[0];\n// };\n\n// import pako from 'pako';\n// /**\n//  * @description gzip解压缩\n//  * @param {string} b64Data 压缩数据\n//  * @returns {string} 生成的字符\n//  */\n// export const unzip = b64Data => {\n//   if (!b64Data) return false;\n//   let strData = atob(b64Data);\n//   let charData = strData.split('').map(x => {\n//     return x.charCodeAt(0);\n//   });\n//   let binData = new Uint8Array(charData);\n//   let data = pako.inflate(binData);\n//   strData = String.fromCharCode.apply(null, [...new Uint16Array(data)]);\n//   return decodeURIComponent(strData);\n// };\n\n// /**\n//  * @description 将压缩数据解压并拼接后返回\n//  * @param {string[]} arr 压缩数据数组\n//  * @returns {any[]} 解压后的数据数组\n//  */\n// export const zipToUnzip = arr => {\n//   let unzipArr = '';\n//   arr.forEach(item => {\n//     unzipArr += unzip(item);\n//   });\n//   unzipArr = JSON.parse(unzipArr || '[]');\n//   return unzipArr;\n// };\n\n/**\n * @description 禁止浏览器一些默认事件\n * @returns {void}\n */\nexport const disabledChromeDefault = () => {\n  // 禁止选择\n  document.onselectstart = () => {\n    return false;\n  };\n  // 禁止复制\n  document.oncopy = () => {\n    return false;\n  };\n  // 禁止剪切\n  document.oncut = () => {\n    return false;\n  };\n  // 禁止粘贴\n  document.onpaste = () => {\n    return false;\n  };\n  // 禁止拖拽\n  document.ondragstart = () => {\n    return false;\n  };\n  // 禁止多功能键\n  document.oncontextmenu = () => {\n    return false;\n  };\n};\n\n// 交易中订单倒计时国际标准时分秒 默认：(09:40:32)，isRight(09ˋ40′32″)\nexport const formatSeconds = (date, type, isRight = false) => {\n  let marks = ':';\n  let marks2 = '';\n  if (isRight) {\n    marks = '’';\n    marks2 = '’’';\n  }\n  let formatTime = time => {\n    let t = time;\n    if (t < 10) {\n      t = `0${(parseInt(t, 10), 10)}`;\n    }\n    return t;\n  };\n\n  const timeObj = formatDate(date);\n  let { dayTime, hourTime, minuteTime, secondTime } = timeObj;\n  let result = '';\n\n  switch (type) {\n    case 'OTC':\n      result = `${secondTime / 10 < 1 ? 0 : ''}${parseInt(secondTime, 10)}${marks2}`;\n      if (minuteTime > 0) {\n        result = `${minuteTime / 10 < 1 ? 0 : ''}${parseInt(minuteTime, 10)}${marks}${result}`;\n      } else {\n        result = `00${marks}${result}`;\n      }\n      if (hourTime > 0) {\n        result = `${hourTime / 10 < 1 ? 0 : ''}${parseInt(hourTime, 10)}${marks}${result}`;\n      } else {\n        result = `00${marks}${result}`;\n      }\n      break;\n    default:\n      result = `${formatTime(dayTime)}_${formatTime(hourTime)}_${formatTime(minuteTime)}_${formatTime(secondTime)}`;\n      break;\n  }\n  return result;\n};\n\n/**\n * @description 价格简化\n * @param {number} price 价格\n * @param {number} fixed 小数位\n * @returns {string} 简化后的价格\n */\nexport const reducePrice = (price, fixed = 2) => {\n  let arr = [];\n  // 过滤替换\n  let filterReplace = arr => {\n    let res = `${price}`;\n    // 排序倒序\n    arr.sort((a, b) => {\n      return b.price - a.price;\n    });\n    // 查找\n    let find = arr.findIndex(item => {\n      return price > item.price;\n    });\n    // 替换\n    if (find !== -1) {\n      let it = arr[find];\n      res = `${toFixed(price / it.price, fixed)}${it.title}`;\n    }\n    return res;\n  };\n  // 国家化区分\n  if (getLocale() === 'zh_CN') {\n    arr = [\n      {\n        price: 10000,\n        title: '万',\n      },\n      {\n        price: 100000000,\n        title: '亿',\n      },\n    ];\n  } else {\n    arr = [\n      {\n        price: 1000,\n        title: 'K',\n      },\n      {\n        price: 1000000,\n        title: 'M',\n      },\n    ];\n  }\n  return filterReplace(arr);\n};\n\n// 获取国家标识\nexport const getLocale = () => {\n  return 'zh_CN';\n};\n\n/**\n * @description 时间格式化\n * @param {(Date | undefined)} date 毫秒时间\n * @param {number} [time='123456'] 返回时间状态\n * @param {string} [symbol='/'] 日期间隔符\n * @param {string} [timeSymbol=':'] 时间间隔符\n * @returns {string}\n */\nexport const formatDate = (\n  date,\n  // 1年 2月 3日 4时 5分 6秒\n  time = '123456',\n  symbol = '/',\n  timeSymbol = ':',\n  UTC = false,\n  // eslint-disable-next-line max-params\n) => {\n  if (!date || date === '--') return '--';\n  let dateProcess = date;\n  if (typeof dateProcess === 'string') {\n    dateProcess = new Date(parseInt(dateProcess, 10));\n  } else {\n    dateProcess = new Date(dateProcess);\n  }\n  let year = dateProcess.getFullYear();\n  let month = dateProcess.getMonth() + 1;\n  let day = dateProcess.getDate();\n  let hour = dateProcess.getHours();\n  let minute = dateProcess.getMinutes();\n  let second = dateProcess.getSeconds();\n  if (UTC) {\n    year = dateProcess.getUTCFullYear();\n    month = dateProcess.getUTCMonth() + 1;\n    day = dateProcess.getUTCDate();\n    hour = dateProcess.getUTCHours();\n    minute = dateProcess.getUTCMinutes();\n    second = dateProcess.getUTCSeconds();\n  }\n  let formatNumber = n => {\n    let t = n.toString();\n    return t[1] ? t : `0${t}`;\n  };\n  let firstArr = [];\n  let lastArr = [];\n  let arr = time.toString().split('');\n  let firstOver = false;\n  let lastOver = false;\n  arr.forEach(item => {\n    switch (item) {\n      case '1':\n        firstArr.push(year);\n        firstOver = true;\n        break;\n      case '2':\n        firstArr.push(month);\n        firstOver = true;\n        break;\n      case '3':\n        firstArr.push(day);\n        firstOver = true;\n        break;\n      case '4':\n        lastArr.push(hour);\n        lastOver = true;\n        break;\n      case '5':\n        lastArr.push(minute);\n        lastOver = true;\n        break;\n      case '6':\n        lastArr.push(second);\n        lastOver = true;\n        break;\n    }\n  });\n  if (arr.length > 3) {\n    return `${firstArr.map(formatNumber).join(symbol)} ${lastArr.map(formatNumber).join(timeSymbol)}`;\n  } else if (arr.length <= 3) {\n    if (firstOver && lastOver) {\n      return `${firstArr.map(formatNumber).join(symbol)} ${lastArr.map(formatNumber).join(timeSymbol)}`;\n    }\n    if (firstOver && !lastOver) {\n      return `${firstArr.map(formatNumber).join(symbol)}`;\n    }\n    if (!firstOver && lastOver) {\n      return `${lastArr.map(formatNumber).join(timeSymbol)}`;\n    }\n  }\n  return '';\n};\n\n// 拦截全局input输入 并过滤数字\nexport const interceptInput = () => {\n  document.addEventListener('input', e => {\n    if (e.target.nodeName === 'INPUT') {\n      let target = e.target;\n      {\n        let parent = target.parentNode;\n        // 过滤浮点型数字\n        let filterNumber = parent.className.split(' ').includes('filterNumber');\n        if (filterNumber) {\n          e.target.value = inputNumberFilter(e.target.value);\n        }\n        // 过滤整型数字\n        let filterNumberInteger = parent.className.split(' ').includes('filterNumberInteger');\n        if (filterNumberInteger) {\n          e.target.value = inputNumberFilter(e.target.value, 0);\n        }\n      }\n    }\n  });\n};\n\n/**\n * @description 数字输入过滤 可指定输入小数位\n * @author hys\n * @date 11/11/2020\n * @params [res] Number 目标数字\n * @params [fixed] Number 小数位\n * @params [maxLen] Number 整数位\n */\nexport const inputNumberFilter = (res, fixed = 8, maxLen) => {\n  let val = res.toString();\n  // 非数字\n  val = val.replace(/[^\\d.]/g, '');\n  // 小数点开头\n  val = val.replace(/^\\./g, '');\n  // 连续小数点\n  val = val.replace(/(\\.+)/g, '.');\n  // 开头多个零\n  val = val.replace(/^(0+)/g, '0');\n  // 非浮点类型的开头零\n  val = val.replace(/^(0)([^.]+)/g, '$2');\n  // 多个小数点\n  val = val.replace(/(\\.)([^.]+)(\\.+)/g, '$1$2');\n  // 处理\n  let arr = val.split('.');\n  // 处理整数位\n  if (maxLen) {\n    arr[0] = arr[0].substr(0, maxLen);\n  }\n  // 处理小数位\n  if (fixed > 0) {\n    if (arr[1]) {\n      arr[1] = arr[1].substr(0, fixed);\n      val = arr.join('.');\n    }\n  } else if (fixed === 0) {\n    val = arr.join('.');\n    val = Number(val).toString();\n  }\n  return val;\n};\n\n/**\n * @description 获取cookie\n */\nexport const getCookie = name => {\n  let reg = new RegExp(`(^| )${name}=([^;]*)(;|$)`);\n  let arr = document.cookie.match(reg);\n  if (arr) {\n    return unescape(arr[2]);\n  } else {\n    return '';\n  }\n};\n\n/**\n * @description 设置cookie\n */\n// eslint-disable-next-line max-params\nexport const setCookie = (name, value, expired = 24 * 60 * 60 * 1000, domain) => {\n  let exudate = new Date();\n  exudate.setDate(exudate.getTime() + expired);\n  document.cookie = `${name}=${escape(value)};expires=${exudate.toUTCString()};${domain ? `domain=${domain}` : ''}`;\n};\n\n/**\n * @description 删除cookie\n */\nexport const clearCookie = name => {\n  setCookie(name, '', -1);\n};\n\n/**\n * @description 模糊匹配获取cookie\n */\nexport const matchCookie = name => {\n  let reg = new RegExp(`(^| )${name}([^=]*)=([^;]*)(;|$)`, 'g');\n  let arr = document.cookie.match(reg);\n  if (arr) {\n    return arr.map(item => {\n      let a = item.slice(1, -1).split('=');\n      a[1] = decodeURIComponent(a[1]);\n      return a;\n    });\n  } else {\n    return null;\n  }\n};\n\n/**\n * @description 获取domain\n */\nexport const getDomain = () => {\n  let target = 'ONCE_CEUI';\n  let url = window.top.location.href;\n  let parse = parseUrl(url);\n  let arr = parse.host.split('.');\n  let fc = (arr, i = 0, d = 1) => {\n    let ti = i + 2;\n    let sp = arr.splice(-ti, ti);\n    return sp.join('.');\n  };\n\n  for (let i = 0; i <= 2; i++) {\n    let domain = fc(arr.concat(), i);\n    setCookie(target, domain, 24 * 60 * 60 * 1000, domain);\n    let ceui = getCookie(target);\n    if (ceui) {\n      setCookie(target, '', -1, domain);\n      i = 3;\n      return ceui;\n    }\n  }\n  return '';\n};\n\n// 深度循环对象 处理科学记数法问题\nexport const deepObjectToNumber = res => {\n  if (res) {\n    let loop = r => {\n      if (typeof r === 'object' && r !== null) {\n        for (let [item, value] of Object.entries(r)) {\n          if (typeof value === 'number') {\n            if (value.toString().indexOf('e') > -1 || value.toString().indexOf('E') > -1) {\n              r[item] = toNumber(value).toString();\n            }\n          }\n          if (typeof value === 'object') {\n            loop(value);\n          }\n        }\n      }\n    };\n    loop(res);\n  }\n  return res;\n};\n\n\n// import axios from 'axios';\n// import { Toast } from 'vant';\n// import { Message } from 'element-ui';\n// import qs from 'qs';\n// axios process\n// eslint-disable-next-line max-params\n// export const http = (type, url, params, configs = {}) => {\n//   if (type === 'get' && params) {\n//     url = `${url}?${qs.stringify(params, { arrayFormat: 'indices' })}`;\n//     params = {};\n//   }\n//   let config = {\n//     ...configs,\n//   };\n//   if (type === 'file') {\n//     type = 'post';\n//     let formdata = new FormData();\n//     for (let [key, value] of Object.entries(params)) {\n//       formdata.append(key, value);\n//     }\n//     params = formdata;\n//     config = {\n//       headers: {\n//         'Content-Type': 'multipart/form-data',\n//       },\n//       ...configs,\n//     };\n//   }\n//   let response = axios[type](url, params, config);\n//   let thenCallback = () => {};\n//   let thenAllCallback = () => {};\n//   let catchCallback = () => {};\n//   let allCallback = () => {};\n//   response\n//     .then(res => {\n//       if (res.code === 200) {\n//         thenCallback(res);\n//       }\n//       if (res.code === 0) {\n//         if (judgePhone()) {\n//           Toast(res.msg);\n//         } else {\n//           Message.info(res.msg);\n//         }\n//       }\n//       thenAllCallback(res);\n//       allCallback(res);\n//     })\n//     .catch(res => {\n//       console.error(`[ catch ](${url})`, res);\n//       catchCallback(res);\n//       allCallback();\n//     });\n//   return {\n//     then(callback) {\n//       thenCallback = callback;\n//       return this;\n//     },\n//     thenAll(callback) {\n//       thenAllCallback = callback;\n//       return this;\n//     },\n//     catch(callback) {\n//       catchCallback = callback;\n//     },\n//     all(callback) {\n//       allCallback = callback;\n//     },\n//   };\n// };\n","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nimport { parseUrl } from '../package/lib/index.js';\nlet url = parseUrl(window.location)\nconsole.log('[ url ]', url);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}